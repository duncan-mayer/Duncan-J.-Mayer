{
  "hash": "63c23da257ac94be3a5538487c3c5393",
  "result": {
    "markdown": "---\ntitle: \"On the Adjacency Matrix in ICAR and Convolution Prior Models\"\nauthor: \"Duncan J. Mayer\"\ndate: \"2023-01-10\"\ncategories: [spatial, simulation, r, base]\nimage: \"navigation_hotline_1969.webp\"\ncode-fold: true\n---\n\n\nThis post explores the role of the adjacency matrix in determining spatial variation in the Intrinsic Conditional Auto-regressive (ICAR) and convolution prior models.\n\n# Introduction\n\nAreal data, which consists of a finite set of bounded regions, in which measurements aggregated from each region's population, are commonly encountered in many areas. For example, in US based research it is common to investigate occurrences of a phenomenon using administrative units such as counties, census tracts, or zip codes. When considering such spatial units, geographic scale becomes a key concern. Geographic scale consists of grain and extent, where grain refers to the resolution of sampling units,and extent refers to the total area under consideration (Simon, 1962). In many applications spatial heterogeneity is a looming threat and depends on scale, for example, working with large extent and coarse grain may mask spatial heterogeneity, only to see it emerge at finer grain, and patterns in ecological data can be confounded by trends at intermediate scales and noise at the smallest scales. Spatial methods provide a way of disentangling artifacts of geographic scale and patterns. The convolution prior (described below) is a widely used model that captures spatial and non-spatial heterogeneity, allowing a comparison of sources of variation, and more accurate estimation of focal effects.\n\nThis post first discusses the convolution prior, then using a series of simulations the post shows the ratio of spatial to non-spatial heterogeneity is primarily a function of the adjacency matrix, a feature that is not often discussed in applied work. Additionally, the simulations show standard approaches, such as model comparison, are not helpful in recovering the underlying neighborhood structure.\n\n# The ICAR Prior\n\nThe ICAR prior model was first introduced by Besag (1974) as a special case of the CAR prior, namely, when the model assumes complete spatial heterogeneity. Given a graph of neighbors which defines the pairs of regions which interact, the conditional distribution of the individual random variables defines a Gaussian Markov Random Field, while the joint distribution is multivariate normal with mean zero (Besag, 1974). The ICAR prior model can be written as\n\n$$\n\\phi_i | \\phi_{[i]} \\sim N \\left(\\frac{\\sum_{[i]} \\phi_i }{d_i}, \n\\frac{\\sigma_\\phi^2}{d_i} \\right) \n$$\n\nwhere $\\phi_i$ defines the spatial effect for neighborhood $i$, and $[i]$ indexes the neighbors of neighborhood $i$, $d_i$ is the number of neighbors for neighborhood $i$, and $\\sigma^2_\\phi$ is the common variance.[^1]\n\n[^1]: Following recent convention, this post defines things in terms of standard deviation and variance, rather than precision as is found in many of the older references (e.g., Besag, 1974).\n\n## The Adjacency Matrix\n\nThe precision matrix for the multivariate normal that defines the joint distribution of the spatial effects is derived from a diagonal matrix and an adjacency matrix, both are $n$ by $n$ matrices, where the diagonal matrix contains the number of neighbors corresponding to neighborhood $i$ in entry $n_{ii}$ while the adjacency matrix is often binary, containing a \"1\" in entry $n_{ij}$ if neighborhoods $i$ and $j$ are neighbors, and \"0\" otherwise[^2].\n\n[^2]: Given the diagonal matrix $D$ and the adjacency matrix $A$, the precision matrix $Q$ is found by $Q = D(I - \\alpha A)$, where $\\alpha$ is set to 1 in the ICAR. This post entertains binary adjacency matrices, although the broader literature often includes other forms, such as row or global standardization, or measures of similarity (see, for example, Earnest et al., 2007). These are simple to implement, however, the applied literature often focuses on the binary specification.\n\nClearly, the specification of the adjacency matrix has implications for the estimates of $\\phi_i$. In the equation for the ICAR shown above, it is clear that the total number of neighbors can change the estimates: the specification of neighbors in the sum change the estimates for the mean, as it is calculated conditional on the neighbors. It is likely that a high number of neighbors increases the spatial effects to the extent that they outpace the increase in the denominator. Further, the variance decreases as a function of the number of neighbors defined in the adjacency matrix.\n\n## The Convolution Prior Model\n\nThe ICAR prior assumes complete spatial autocorrelation, which can be viewed as a is a strong prior on the source of variation when included in isolation: fixing non-spatial variation at zero. The convolution prior (Besag, York, and Mollié, 1991) relaxes this assumption by including a spatially structured effect (ICAR) and an unstructured random effect that varies over the spatial units. Commonly, this comes in the form of the Besag-York-Mollié (BYM) model, which places the two random effects in the context of a log-Poisson model, often with an exposure term. With covariates outcome $Y_i$ for spatial units $i$, covariates $X$ and offset $p_i$, the BYM can be written as\n\n$$\nY_i \\sim Poisson(\\lambda_i)\n$$\n\n$$\nln(\\lambda_i) \\equiv ln(p_i) + X\\beta + \\phi_i + \\delta_i\n$$\n\n$$\n\\phi_i | \\phi_{[i]} \\sim N \\left(\\frac{\\sum_{[i]} \\phi_i }{d_i}, \n\\frac{\\sigma_\\phi^2}{d_i} \\right) \\; \\textrm{and} \\;\n\\delta_i \\sim N(0, \\sigma^2_{\\delta})\n$$\n\nThe convolution prior model often requires sensible priors, estimating two random effects when one measurement is taken from each spatial unit the posteriors may be sensitive to the selection of priors in the full Bayesian context. Additionally, sensible priors (or \"fair\", in the sense that they equally weight spatial and non-spatial variation) are difficult to generate as the ICAR is specified conditionally while the unstructured effect is specified marginally[^3]. However, it is often tempting to compare the sources of variation, declaring a percent of the variation in the outcome due to spatially structured variation, or non-spatially structured variation. For example, one may compute $\\sigma^2_\\phi / (\\sigma^2_\\phi + \\sigma^2_\\delta)$. Yet, as described above, the posterior of the variance may depend heavily on the specification of the adjacency matrix, an issue under-researched in the literature. Accordingly, this post explores the sensitivity of the posterior estimates to the specification of the adjacency matrix, as well as the ability of the model to recover the correct neighborhood structure.\n\n[^3]: Taking this issues seriously is challenging (see Banerjee et al., 2003). Recent advances in the Complexity Penalizing framework have resulting in clever reparameterizations, see (Riebler et al., 2016).\n\n# Simulation Study\n\n## Defining Adjacency Matrices\n\nTo simulate the convolution prior, I first must specify a neighborhood graph. For the purpose of this post, I'm going to use Cuyahoga County Ohio's Census Tracts, with 2010 geographic boundaries. I will generate a total of 6 adjacency matrices to show how rapidly the number of neighbors increase, although in the eventual in the simulation study, I will focus on \"queen\" contiguity as it is the most commonly used, and entertaining all patterns would be much too long for a post, although the idea holds for other patterns.\n\nI define all adjacency matrices to be binary, varying the order of neighbors from 1-3. Below, I've written a function to help create the various adjacency matrices that will be used in this study.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary('ggplot2')\nlibrary('INLA')\n\nset.seed(101) # reproducibility\nca <- tigris::tracts(state = \"OH\", county = \"Cuyahoga\", year = 2010)\n# remove water \nca <- ca[ca$TRACTCE10 !=  990000,]\nca$areaid <- ca$TRACTCE10\n\n# helper function for weight matrix \ncreate_neighborhood_matrix <- function(geo, geo_names, queen = TRUE, style = \"B\", order = 1) {\n  if (class(geo)[1] != \"sfc_MULTIPOLYGON\") {stop(\"geo must be of class sfc_MULTIPOLYGON\")} \n  w <- spdep::poly2nb(geo, row.names = geo_names, queen = queen)\n  if (class(w) != \"nb\") {stop(\"w must be of class nb\")}\n  if (order < 1 | order > 3) {stop(\"order of neighbors must be 1, 2, or 3\")}\n  if (order == 1) {mat <- spdep::nb2mat(w, style = style)}\n  if (order %in% c(2, 3)) {\n      wl <- spdep::nblag(w, maxlag = order)\n      wl <- spdep::nblag_cumul(wl)\n      mat <- spdep::nb2mat(wl, style = style)\n  }\n  return(mat)\n}\n```\n:::\n\n\nAs I define the neighbors to be of higher order, the average number of neighbors increases dramatically, for example, the average number of neighbors for each unit increases from 6 to 41 using queen contiguity, and from 5 to 36 for rook contiguity, as we vary the order of neighbors from 1 to 3.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noutq <- list()\noutr <- list()\nfor ( i in 1:3) {\noutq[[i]] <- create_neighborhood_matrix(geo = ca$geometry, geo_names = ca$TRACTCE10, order = i)\n\noutr[[i]] <- create_neighborhood_matrix(geo = ca$geometry,queen = FALSE, geo_names = ca$TRACTCE10, order = i)\n}\nnlist <- c(outq, outr)\ndfoutq <- do.call(rbind.data.frame, lapply(outq, \\(x) sum(x) / dim(x)[1]))\ndfoutr <- do.call(rbind.data.frame, lapply(outr, \\(x) sum(x) / dim(x)[1]))\noutn <- cbind(dfoutq, dfoutr)\nnames(outn) <- c(\"Queen\", \"Rook\")\noutn$Order <- c(1:3)\ngt::gt(round(outn, 2))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"iynwqzvcci\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#iynwqzvcci .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#iynwqzvcci .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#iynwqzvcci .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#iynwqzvcci .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#iynwqzvcci .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#iynwqzvcci .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#iynwqzvcci .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#iynwqzvcci .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#iynwqzvcci .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#iynwqzvcci .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#iynwqzvcci .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#iynwqzvcci .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#iynwqzvcci .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#iynwqzvcci .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iynwqzvcci .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iynwqzvcci .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#iynwqzvcci .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#iynwqzvcci .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#iynwqzvcci .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#iynwqzvcci .gt_left {\n  text-align: left;\n}\n\n#iynwqzvcci .gt_center {\n  text-align: center;\n}\n\n#iynwqzvcci .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#iynwqzvcci .gt_font_normal {\n  font-weight: normal;\n}\n\n#iynwqzvcci .gt_font_bold {\n  font-weight: bold;\n}\n\n#iynwqzvcci .gt_font_italic {\n  font-style: italic;\n}\n\n#iynwqzvcci .gt_super {\n  font-size: 65%;\n}\n\n#iynwqzvcci .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 65%;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\">Queen</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\">Rook</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\">Order</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_right\">6.10</td>\n<td class=\"gt_row gt_right\">5.34</td>\n<td class=\"gt_row gt_right\">1</td></tr>\n    <tr><td class=\"gt_row gt_right\">19.63</td>\n<td class=\"gt_row gt_right\">17.17</td>\n<td class=\"gt_row gt_right\">2</td></tr>\n    <tr><td class=\"gt_row gt_right\">41.58</td>\n<td class=\"gt_row gt_right\">36.34</td>\n<td class=\"gt_row gt_right\">3</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n## Simulating the Convolution Prior\n\nIn the code below, for a given adjacency matrix, I create a function with simulates data consistent with the neighbor graph following the process of a convolution prior on the log scale, with 3 covariates sampled from a multivariate normal and an offset sampled from a uniform distribution. In the code below, the spatial effect is generated using `SUMMER` and labeled `sp` while the unstructured variation is `unstruc`. There are two features worth noting here. First, the random effects are uncorrelated with the covariates, a simplifying assumption of the BYM model. Second, the unstructured variation is sampling from a normal distribution with standard deviation defined as equal to the standard deviation of the spatially structured variation. This ensures they are equal, on average, when the data are simulated.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulate_bym_df <-  function(neighborhoodmat, n = dim(neighborhoodmat)[1], bx = c(.08,-.03,-.04),\n                                   mu = c(1, 1, 2), \n                                   sigma = matrix(\n                                     data = c(1.11, 0.30, -0.15,  \n                                              0.30,  0.84,  0.25, \n                                              -0.15,  0.25,  2.00), nrow = 3)) {\n  # create data\n  dft <- MASS::mvrnorm(n, mu = mu, Sigma = sigma)\n  sp <- as.vector(SUMMER::rst(n= 1, n.t = 1, type = \"s\", \n                              Amat = neighborhoodmat, scale.model = TRUE)) # spatial random effect, ICAR\n  offset_pop <- round(runif(n, min = 100, max = 1000), 0) # population size\n  unstruc <- rnorm(n, 0, sd(sp)) # simulate normal, unstructured random effect with standard deviation equal to spatial variation\n  mu_p <- exp(0 + 1*log(offset_pop) + dft %*% bx + sp + unstruc) # generate mean function \n  yy <- as.vector(rpois(n, lambda = mu_p)) # poisson \n  dft <- as.data.frame(cbind(dft, yy, sp, unstruc, offset_pop, mu_p)) # package data\n  dft$areaid <- row.names(neighborhoodmat) # create ids\n  return(dft)\n}\n```\n:::\n\n\nWith functions to create a neighborhood structure of our choice and generate data following the convolution prior with ecological covariates, all that's left to do before fitting the models is create the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create data \ndfqlist <- list()\nsdq <- list()\nfor ( i in 1:3) {\n# underlying structure of spatial correlation is queen with order 1-3\ndfqlist[[i]] <-  simulate_bym_df(neighborhoodmat =  \n                                create_neighborhood_matrix(geo = ca$geometry, geo_names = ca$TRACTCE10, order = i))\n\n}\ndflist <- dfqlist\n# \n```\n:::\n\n\n## Results\n\nIn the code below I fit models model with the convolution prior using 3 data sets, each 3 times, varying only the specification of the adjacency matrix[^4]. I use Integrated Nested Laplace Approximation (INLA) with the vague priors that `inla` has as default (diffuse log-gamma for spatial and non-spatial variance). INLA uses optimization rather than sampling, and while I typically prefer the full Bayesian methodology, INLA is often very efficient for latent Gaussian models and I'm fitting several of them here.\n\n[^4]: I know nested loops have fallen out of favor, and this isn't the most elegant solution to getting around them, but as J.D. Long says, \"I'd have written a shorter solution but I didn't have the time\"\n\nHaving fit the 9 models, I then extract the hyper-parameters transformed (which are transformed into standard deviation) and show the results in the figure below. The top row of the figure shows a summary of the posterior for the standard deviation for the standard deviation of the non-spatial effect, while the second row shows the standard deviation of the spatial variation. The number underneath the label for the source of variation indicates the order of neighbors used to simulate the ICAR.\n\nThere are several notable features of the posterior summaries. As I suggested when inspecting the model in the first section, in all cases the posterior interval of the spatial variation decreases as the order of neighbors, and the average number of neighbors, increases. Additionally, at least when the true order of neighbors is above 1, the standard deviation of the spatial effect increases linearly with the order of neighbors assumed in the construction of the adjacency matrix. When the true order is 1, however, the standard deviation increases when the order jumps for 1 to 2, but not from 2 to 3. As the two random effects in the BYM model compete for variation, the non-spatial standard deviation decreases as a function of the number of neighbors. In this sense, the simulation shows that *the percent of variance that is spatially structured is largely an artifact of the adjacency matrix*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfitf <- function(neigh, df) {\n  #  INLA FORMULA\nform <- yy ~ 1 + V1 + V2 + V3 + \n  f(areaid, model = \"bym\", \n  graph = neigh, values = row.names(neigh), scale.model = TRUE) \nm <- inla(formula = form,\n     family= \"poisson\", offset = log(offset_pop),\n     data=df,\n     control.family=list(link='log'),\n     control.predictor=list(link=1, compute=TRUE),\n     control.compute=list(dic=TRUE, cpo=TRUE, waic=TRUE))\nmout <- as.data.frame(brinla::bri.hyperpar.summary(m))\nmout$empircal_sdsp <- sd(df$sp)\nmout$empircal_sdun <- sd(df$unstruc)\nmout$waic <- m$waic$waic\nreturn(mout)\n}\n# index book keeping to avoid nested loop\ntr <- expand.grid(1:3, 1:3)\nmodlist <- list()\nfor (i in 1:length(tr$Var1) ) {\nmodlist[[i]] <- fitf(nlist[[tr$Var1[[i]]]], dflist[[tr$Var2[[i]]]])\n}\n\nnames(tr) <- c(\"neigh\", \"df\")\nhyper_results <- do.call(rbind.data.frame, modlist)\n\n# label componenets\nhyper_results$com <- rep(c(\"iid Variation\",\"Spatial Variation\"))\n\n# combine results \nhyper_results <- rbind(cbind(hyper_results[hyper_results$com == \"iid Variation\",], tr), cbind(hyper_results[hyper_results$com == \"Spatial Variation\",], tr))\nhyper_results$neigh <- as.factor(hyper_results$neigh )\n\n# plot hyper-parameters over adjacnecy specifications\nggplot(hyper_results, aes(y = mean, x = neigh, \n                          ymin = q0.025, ymax = q0.975)) + geom_pointrange() + \n  labs(y = \"Mean and Posterior Interval\", x = \"Order of Neighors (assumed)\") +\n  facet_wrap(. ~ com + df, scales = \"fixed\") + theme_classic()\n```\n\n::: {.cell-output-display}\n![](icar_note_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n# Does Model Comparison Help?\n\nThe discussion and simulation shown above suggests the results depend heavily on the choice of neighbor order when creating an adjacency matrix. So, now I consider if the adjacency matrix can be recovered through model comparison. Here, I use the Watanabe--Akaike information criterion (WAIC), which is a measure of prediction error that does not require the true distribution, and is often preferred in the Bayesian setting as it integrates over the full posterior in contrast to, for example, DIC, which relies on the posterior mean (Gelman et al., 2014). If one is further willing to assume that the true model is among the candidates considers (i.e. M-closed), which is verifiable the data are simulated, relative WAIC can be used create weights that sum to 1 and yield the probability that the model is correct (Wagenmakers & Farrell, 2004).\n\nIn the code below I generate weights for the 3 models considered under each data set. The table shows the order of neighbors assumed in the adjacency matrix used in the model, the order of neighbors used when simulating the data (\"true\"), the WAIC, and the weight. A correct model is one where the orders agree.\n\nClearly, model comparison is not helpful in this situation. The weights are comparable across models, as predictive performance is largely unable to discern between adjacency matrices. However, assuming third order neighbors achieves the \"best\" predictive performance in all situations, despite being incorrect in two occasions. These results suggest the true order of neighbors can not be recovered by conventional model comparison.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwaictab <- hyper_results[!duplicated(hyper_results$waic), c(\"neigh\", \"df\", \"waic\")]\n\ncreate_weights <- function(ic) {\n  delta <- ic - min(ic)\n  exp_delta <- exp((-.5)*delta)\n  denom <- sum(exp_delta)\n  prob_m <- exp_delta / denom\n  icweights <- data.frame(delta, exp_delta, denom, prob_m)\nreturn(icweights)  \n}\n\noutt <- list()\nfor (i in 1:length(table(waictab$df))) {\n  temp <- waictab[waictab$df == i, ]\n  temp$weight <- create_weights(temp$waic)$prob_m\n  outt[[i]] <- temp\n}\nwaictab<- do.call(rbind.data.frame, outt)\nwaictab[,3:4] <- round(waictab[,3:4],2)\ngt::cols_label(gt::gt(waictab[order(-waictab$weight),]), \n    neigh = \"Order (model)\", df = \"Order (true)\", waic = \"WAIC\", weight = \"Weight\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"bkaaxzdoxf\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#bkaaxzdoxf .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#bkaaxzdoxf .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#bkaaxzdoxf .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#bkaaxzdoxf .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#bkaaxzdoxf .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#bkaaxzdoxf .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#bkaaxzdoxf .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#bkaaxzdoxf .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#bkaaxzdoxf .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#bkaaxzdoxf .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#bkaaxzdoxf .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#bkaaxzdoxf .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#bkaaxzdoxf .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#bkaaxzdoxf .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bkaaxzdoxf .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bkaaxzdoxf .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#bkaaxzdoxf .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#bkaaxzdoxf .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bkaaxzdoxf .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#bkaaxzdoxf .gt_left {\n  text-align: left;\n}\n\n#bkaaxzdoxf .gt_center {\n  text-align: center;\n}\n\n#bkaaxzdoxf .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#bkaaxzdoxf .gt_font_normal {\n  font-weight: normal;\n}\n\n#bkaaxzdoxf .gt_font_bold {\n  font-weight: bold;\n}\n\n#bkaaxzdoxf .gt_font_italic {\n  font-style: italic;\n}\n\n#bkaaxzdoxf .gt_super {\n  font-size: 65%;\n}\n\n#bkaaxzdoxf .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 65%;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\">Order (model)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\">Order (true)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\">WAIC</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\">Weight</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_center\">3</td>\n<td class=\"gt_row gt_right\">2</td>\n<td class=\"gt_row gt_right\">4313.40</td>\n<td class=\"gt_row gt_right\">0.39</td></tr>\n    <tr><td class=\"gt_row gt_center\">3</td>\n<td class=\"gt_row gt_right\">1</td>\n<td class=\"gt_row gt_right\">4297.99</td>\n<td class=\"gt_row gt_right\">0.36</td></tr>\n    <tr><td class=\"gt_row gt_center\">3</td>\n<td class=\"gt_row gt_right\">3</td>\n<td class=\"gt_row gt_right\">4290.54</td>\n<td class=\"gt_row gt_right\">0.36</td></tr>\n    <tr><td class=\"gt_row gt_center\">2</td>\n<td class=\"gt_row gt_right\">2</td>\n<td class=\"gt_row gt_right\">4313.68</td>\n<td class=\"gt_row gt_right\">0.34</td></tr>\n    <tr><td class=\"gt_row gt_center\">1</td>\n<td class=\"gt_row gt_right\">1</td>\n<td class=\"gt_row gt_right\">4298.15</td>\n<td class=\"gt_row gt_right\">0.33</td></tr>\n    <tr><td class=\"gt_row gt_center\">2</td>\n<td class=\"gt_row gt_right\">3</td>\n<td class=\"gt_row gt_right\">4290.75</td>\n<td class=\"gt_row gt_right\">0.33</td></tr>\n    <tr><td class=\"gt_row gt_center\">2</td>\n<td class=\"gt_row gt_right\">1</td>\n<td class=\"gt_row gt_right\">4298.24</td>\n<td class=\"gt_row gt_right\">0.31</td></tr>\n    <tr><td class=\"gt_row gt_center\">1</td>\n<td class=\"gt_row gt_right\">3</td>\n<td class=\"gt_row gt_right\">4290.84</td>\n<td class=\"gt_row gt_right\">0.31</td></tr>\n    <tr><td class=\"gt_row gt_center\">1</td>\n<td class=\"gt_row gt_right\">2</td>\n<td class=\"gt_row gt_right\">4314.08</td>\n<td class=\"gt_row gt_right\">0.28</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n# Conclusion\n\nIn this post I have described the ICAR and convolution prior models, as well as the BYM model which places them in the setting of a log-poisson. I've focused on the role of the adjacency matrix in the ICAR component and suggested it is important in determining the posterior of the ICAR's variance. Using simulation, I showed that varying only the order of neighbors in the adjacency matrix changes the estimates of the posterior, as well as the corresponding unstructured effect. Finally, I showed that model comparison is not helpful in recovering the true order of neighbors.\n\n# References\n\nBanerjee, S., Carlin, B. P., & Gelfand, A. E. (2003). *Hierarchical Modeling and Analysis for Spatial Data* (1st edition). Chapman and Hall/CRC.\n\nBesag, J. 1974. \"Spatial Interaction and the Statistical Analysis of Lat-\\\ntice Systems.\" Journal of the Royal Statistical Society. Series B (Methodological).\\\nJSTOR, 192--236.\n\nBesag, J, J York, and A Mollié. 1991. \"Bayesian Image Restoration with\\\nTwo Applications in Spatial Statistics.\" Ann Inst Stat Math 43: 1--59. (https:\\\n//doi.org/10.1007).\n\nEarnest, A., Morgan, G., Mengersen, K., Ryan, L., Summerhayes, R., & Beard, J. (2007). Evaluating the effect of neighbourhood weight matrices on smoothing properties of Conditional Autoregressive (CAR) models. *International Journal of Health Geographics*, *6*(1), 54. https://doi.org/10.1186/1476-072X-6-54\n\nGelman, A., Hwang, J., & Vehtari, A. (2014). Understanding predictive information criteria for Bayesian models. *Statistics and Computing*, *24*(6), 997--1016. https://doi.org/10.1007/s11222-013-9416-2\n\nRiebler, A., Sørbye, S. H., Simpson, D., & Rue, H. (2016). An intuitive Bayesian spatial model for disease mapping that accounts for scaling. *Statistical Methods in Medical Research*, *25*(4), 1145--1165. https://doi.org/10.1177/0962280216660421\n\nSimon, H., A. 1962. The architecture of complexity. *Proceedings of the American Philosophical Society* **106**:467-482\n\nWagenmakers, E.-J., & Farrell, S. (2004). AIC model selection using Akaike weights. *Psychonomic Bulletin & Review*, *11*(1), 192--196. https://doi.org/10.3758/BF03206482\n",
    "supporting": [
      "icar_note_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}